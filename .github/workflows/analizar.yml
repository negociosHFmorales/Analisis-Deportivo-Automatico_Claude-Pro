name: Analizar Partidos Deportivos

on:
  issues:
    types: [opened]
  schedule:
    # Ejecutar automáticamente cada día a las 8:00 AM
    - cron: '0 8 * * *'
  workflow_dispatch: # Permite ejecutar manualmente

jobs:
  analizar:
    if: contains(github.event.issue.title, 'Análisis de partidos') || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Descargar código
        uses: actions/checkout@v4
      
      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: 📦 Instalar dependencias
        run: |
          pip install --upgrade pip
          pip install pandas numpy scipy requests python-dateutil
          pip install --no-cache-dir requests urllib3
      
      - name: 🔍 Verificar conexión a APIs
        run: |
          echo "Verificando conectividad..."
          curl -I https://api.the-odds-api.com/v4/sports/ || echo "Error de conectividad"
      
      - name: 🏆 Ejecutar análisis deportivo
        env:
          API_SPORTS_KEY: ${{ secrets.API_SPORTS_KEY }}
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          echo "🚀 Iniciando análisis con datos reales..."
          python analizar_partidos.py "${{ github.event.issue.body || 'Análisis automático programado' }}"
      
      - name: 📊 Publicar resultados
        uses: actions/github-script@v7
        if: github.event_name == 'issues'
        with:
          script: |
            const fs = require('fs');
            let resultado = '❌ No se pudieron obtener resultados';
            
            try {
              if (fs.existsSync('resultados.txt')) {
                resultado = fs.readFileSync('resultados.txt', 'utf8');
              }
            } catch (error) {
              console.log('Error leyendo resultados:', error);
              resultado = `❌ Error al procesar: ${error.message}`;
            }
            
            const fecha = new Date().toLocaleString('es-CO', {
              timeZone: 'America/Bogota',
              year: 'numeric',
              month: 'long',
              day: 'numeric',
              hour: '2-digit',
              minute: '2-digit'
            });
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 📊 Resultados del Análisis Deportivo\n\n${resultado}\n\n---\n✅ **Análisis completado:** ${fecha}\n🤖 **Ejecutado por:** GitHub Actions`
            });
      
      - name: 💾 Guardar resultados como artefacto
        uses: actions/upload-artifact@v3
        with:
          name: analisis-deportivo-${{ github.run_number }}
          path: resultados.txt
          retention-days: 30
